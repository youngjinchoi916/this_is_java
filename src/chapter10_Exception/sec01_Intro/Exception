[예외와 예외 클래스]
1. 에러와 예외
	(1) 에러 : 컴퓨터 하드웨어의 오동작 또는 고장으로 인해 응용프로그램 실행 오류가 발생하는 것을 자바에서는 에러(error)라고 한다.
    	          JVM 실행에 문제가 생겼다는 것이므로 JVM 위에서 실행되는 프로그램을 아무리 견고하게 만들어도 결국 실행 불능이 된다.
	(2) 예외 : 자바에서는 에러 이외에 예외라고 부르는 오류가 있다.
     		      예외란 사용자의 잘못된 조작 또는 개발자의 잘못된 코딩으로 인해 발생하는 프로그램 오류를 말한다.
           		 예외가 발생되면 프로그램은 곧바로 종료된다는 점에서 에러와 동일하다.
           		 그러나, 예외 처리를 통해 프로그램을 종료하지 않고 정상 실행 상태가 유지되도록 할 수 있다.
           		 
2. 예외의 종류           
	(1) 일반 예외(Exception) : 컴파일러 체크 예외 -> 자바 소스를 컴파일하는 과정에서 예외 처리 코드가 필요한지 검사
										 만약 예외 처리 코드가 없다면 컴파일 오류가 발생한다.
	(2) 실행 예외(Runtime Exception) : 컴파일 하는 과정에서 예외 처리 코드를 검사하지 않는 예외를 말한다.(코드 상 오류는 없음)
		 											  컴파일 시 예외 처리를 확인 하는 과정에서 예외 처리 코드를 검사하지 않는 예외를 말한다.
		 											  실행 예외는 자바 컴파일러가 체크를 하지 않기 때문에 오로지 개발자의 경험에 의해서 예외 처리 코드를 삽입해야 한다.

	자바에서는 예외를 클래스로 관리한다. JVM은 프로그램을 실행하는 도중에 예외가 발생하면 해당 예외 클래스로 객체를 생성한다.
	그리고 나서 예외 처리 코드에서 예외 객체를 이용할 수 있도록 해준다. 모든 예외 클래스는 java.lang.Exception 클래스를 상속 받는다.