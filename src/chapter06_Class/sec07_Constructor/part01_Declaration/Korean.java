package chapter06_Class.sec07_Constructor.part01_Declaration;

public class Korean {
	// 필드
	//필드 초기화 방법[1] : 필드 선언시 초기값을 준다.
	//필드 초기화 방법[2] : 생성자에서 초기값을 준다.
	String nation = "대한민국";
	String name;
	String ssn;
	
	/*
	 * 	[생성자] : 메소드와 비슷한 모양을 가지고 있으나, 리턴타입이 없고 클래스명과 동일하다.
	 *  - 생성자는 new 연산자와 같이 사용되어 클래스로부터 객체를 생성할 때 호출되어 "객체의 초기화"를 담당한다.
	 *    객체의 초기화란 필드를 초기화하거나, 메소드를 호출해서 객체를 사용할 준비를 하는 것이다.
	 *  - new 연산자에 의해 생성자가 성공적으로 실행되면 힙 영역에 객체가 생성되고 객체의 주소가 리턴된다.
	 *  - 리턴된 객체의 주소는 클래스 타입 변수에 저장되어 객체에 접근할 때 이용된다.
	 */
	
	/*
	 * [기본 생성자]
	 *  - 모든 클래스는 생성자가 반드시 존재하며, 하나 이상 가질 수 있다.
	 *  - 클래스 내부에 생성자 선언을 생략했다면 컴파일러는 기본 생성자를 바이트코드에 자동으로 추가시킨다. 
	 *    그러나, 클래스에 명시적으로 선언한 생성자가 하나라도 있다면, 컴파일러는 기본 생성자를 추가하지 않는다. -> 기본 생성자 항상 쓰는 것을 권장
	 *  - 명시적으로 생성자를 선언하는 이유는 객체를 다양하게 초기화 하기 위해서 이다.
	 */
	//public Korean() { }
		
	//생성자 블록 내부에는 객체 초기화 코드가 작성되는데, 일반적으로 필드에 초기값을 저장하거나 메소드를 호출하여 객체 사용 전에 필요한 준비를 한다.
	//객체 생성 시점에 외부에서 제공되는 다양한 값들로 초기화되어야 한다면 생성자에서 초기화를 해야한다
	public Korean(String name, String ssn) {
		this.name = name;
		this.ssn = ssn;
	}
		
} //end class
